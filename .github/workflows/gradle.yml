# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    name: Build
    strategy:
      matrix:
        java: [ 11, 16, 17, 18 ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository
      - name: Verify Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Set up Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{matrix.java}}
          distribution: 'temurin'
          cache: 'gradle'
      - name: Make Gradlew Executable
        run: chmod +x gradlew
      - name: Build with Gradle
        uses: gradle/gradle-build-action@fec4a42eb0c83154e5c9590748ba8337949c5701
        with:
          arguments: build
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality


      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      #   If the Autobuild fails above, remove it and uncomment the following three lines.
      #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

      # - run: |
      #   echo "Run, Build Application using script"
      #   ./location_of_script_within_repo/buildscript.sh

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  javadoc:
    name: Javadocs
    needs: build
    runs-on: ubuntu-latest
    if: ${{github.event_name == 'push' || github.event_name == 'schedule'}}
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository
      - uses: actions/setup-java@v3
        name: Set up Java JDK
        with:
          java-version: 18
          distribution: 'temurin'
          cache: 'gradle'
      - name: Make Gradlew Executable
        run: chmod +x gradlew
      - name: Javadoc with Gradle
        uses: gradle/gradle-build-action@fec4a42eb0c83154e5c9590748ba8337949c5701
        with:
          arguments: javadoc
      - name: Publish to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          publish_dir: ./build/docs/javadoc
  build-indicator:
    name: Build Indicator
    needs:
      - build
      - analyze
    runs-on: ubuntu-latest
    steps:
      - name: Indicate Build Complete
        run: echo "Tests Complete"